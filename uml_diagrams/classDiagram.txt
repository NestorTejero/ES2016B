@startuml

interface CanUpgrade {
    +Upgrade() : void
}
interface CanReceiveDamage {
    +ReceiveDamage() : void
}
interface CanRepair {
    +Repair() : void
}

abstract class PlayerLogic {
    +Play() : void
}

class GameController {
    +totalWaves : int
    -currentWave : int
    ....
    -minSoundVolume : float
    -maxSoundVolume : float
    -currentSoundVolume : float
}

class Player {
    +numCoins : int
}

GameController "1" -- "2" Player

class HumanAI extends PlayerLogic {
}
class EasyAI extends PlayerLogic {
}
class MediumAI extends PlayerLogic {
}
class HardAI extends PlayerLogic {
}

Player "1" -- "1" PlayerLogic

class Unit implements CanReceiveDamage{
    +baseHealth : float
    -currentHealth : float
    +moveSpeed : float
    +cost : int
    +reward : int
}

Player "1" -- "*" Unit

class Weapon implements CanUpgrade{
    +baseDamage : float
    +baseRadius : float
    +baseRange : float
    +baseCooldown : float
    -currentDamage : float
    -currentRadius : float
    -currentRange : float
    -currentCooldown : float
    -upgradeFactor : float
    +Attack() : void
}

class Projectile {
    -projectileSpeed : float
    -target : CanReceiveDamage
}

Weapon "1" -- "*" Projectile

Unit "1" -- "1" Weapon
Tower "1" -- "1" Weapon

class Building implements CanUpgrade, CanReceiveDamage, CanRepair {
    -level : int
    +baseHealth : float
    -totalHealth : float
    -currentHealth : float
    -repairCost : float
}

Player "1" -- "1" Building

class Tower implements CanUpgrade {
    -level : int
}

Player "1" -- "*" Tower

@enduml
